module Lrama
  class Grammar
    class Reference
      attr_accessor type: ::Symbol
      attr_accessor name: String
      attr_accessor number: Integer
      attr_accessor index: Integer
      attr_accessor ex_tag: Lexer::Token?
      attr_accessor first_column: Integer
      attr_accessor last_column: Integer
      attr_accessor position_in_rhs: Integer?

      def initialize: (
        type: ::Symbol, ?name: String, ?number: Integer, ?index: Integer, ?ex_tag: Lexer::Token?,
        first_column: Integer, last_column: Integer,
        ?position_in_rhs: Integer?
      ) -> void

      def value: () -> (String|Integer)
      def tag: () -> untyped
    end
  end
end
